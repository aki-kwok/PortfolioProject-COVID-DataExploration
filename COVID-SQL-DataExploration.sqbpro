<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/akimaedomari/Desktop/Marketing Analyst Data Portfolio Projects/Databases/COVID-DB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="6831"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,27:mainPercentPopulationVaccinated"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="COVIDDeaths" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="55"/><column index="2" value="57"/><column index="3" value="69"/><column index="4" value="73"/><column index="5" value="63"/><column index="6" value="68"/><column index="7" value="66"/><column index="8" value="124"/><column index="9" value="74"/><column index="10" value="72"/><column index="11" value="129"/><column index="12" value="133"/><column index="13" value="132"/><column index="14" value="189"/><column index="15" value="139"/><column index="16" value="137"/><column index="17" value="195"/><column index="18" value="102"/><column index="19" value="72"/><column index="20" value="138"/><column index="21" value="82"/><column index="22" value="147"/><column index="23" value="131"/><column index="24" value="196"/><column index="25" value="140"/><column index="26" value="206"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="COVIDVaccinations" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="56"/><column index="2" value="57"/><column index="3" value="69"/><column index="4" value="73"/><column index="5" value="63"/><column index="6" value="65"/><column index="7" value="63"/><column index="8" value="145"/><column index="9" value="143"/><column index="10" value="121"/><column index="11" value="201"/><column index="12" value="77"/><column index="13" value="89"/><column index="14" value="90"/><column index="15" value="104"/><column index="16" value="106"/><column index="17" value="135"/><column index="18" value="84"/><column index="19" value="102"/><column index="20" value="159"/><column index="21" value="178"/><column index="22" value="180"/><column index="23" value="209"/><column index="24" value="158"/><column index="25" value="225"/><column index="26" value="191"/><column index="27" value="265"/><column index="28" value="98"/><column index="29" value="108"/><column index="30" value="71"/><column index="31" value="88"/><column index="32" value="87"/><column index="33" value="91"/><column index="34" value="97"/><column index="35" value="127"/><column index="36" value="115"/><column index="37" value="93"/><column index="38" value="83"/><column index="39" value="128"/><column index="40" value="161"/><column index="41" value="91"/><column index="42" value="151"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PercentPopulationVaccinated" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--Covid 19 Data Exploration 

--Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

SELECT *
FROM CovidDeaths
--WHERE continent is not NULL
--WHERE location is '%income%'
ORDER BY 3,4;

-- Looking for date of last collected data (2/06/2024)
SELECT *
FROM CovidDeaths
WHERE location like '%state%'
ORDER BY 3,4 DESC;

SELECT *
FROM COVIDVaccinations
WHERE continent is not NULL
ORDER BY 3,4;

-- Select Data that we are going to be starting with
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
ORDER BY 1,2;

--Looking at Total Cases vs Total Deaths (%)
-- Shows likelihood of dying if you contract COVID in your country
SELECT location, 
	date, 
	total_cases, 
	total_deaths,
	(CAST (total_deaths AS FLOAT) / total_cases)*100 AS DeathPercentage
FROM CovidDeaths
WHERE location like '%state%'
ORDER BY 1,2;

--Looking at Total Cases vs Population (%)
--Shows what percentage of population has gotten COVID
SELECT location, 
	date, 
	total_cases, 
	population,
	(CAST (total_cases AS FLOAT) / population)*100 AS [Percent Population Infected]
FROM CovidDeaths
WHERE location like '%state%'
ORDER BY 1,2;

--Looking at Countries with Highest Infection Rate compared to Population 
SELECT location, 
	population,
	MAX(total_cases) AS [Highest Infection Count],
	MAX (CAST (total_cases AS FLOAT) / population)*100 AS [Percent Population Infected]
FROM CovidDeaths
--WHERE location like '%state%'
GROUP BY Location, Population
ORDER BY [Percent Population Infected] DESC;

-- Showing Countries with the Highest Death Count per Population 
SELECT location, 
continent,
	MAX(CAST (total_deaths AS INT)) AS [Total Death Count]
FROM CovidDeaths
--WHERE location like '%state%'
WHERE continent is NOT NULL -- Removes non-location related groups 
	AND location NOT LIKE '%income' -- Excludes locations including categories 'Low Income', 'Lower middle income', 'Upper middle income', 'High Income'
GROUP BY Location
ORDER BY [Total Death Count] DESC;

-- Showing Continents with the Highest Death Count
SELECT continent, 
	MAX(CAST (total_deaths AS INT)) AS [Total Death Count]
FROM CovidDeaths
--WHERE location like '%state%'
WHERE continent is NOT NULL -- Includes all Country groupings 
GROUP BY continent
ORDER BY [Total Death Count] DESC;

--Global Numbers 
SELECT 
SUM(CAST (new_cases AS FLOAT)) AS [Total Cases],
SUM(CAST(new_deaths AS FLOAT)) AS [Total Deaths],
SUM(CAST(new_deaths AS FLOAT)) / SUM(new_cases) * 100 AS [Death Percentage]
FROM CovidDeaths
--WHERE location like '%state%'
--WHERE continent is NOT NULL
--GROUP BY date
ORDER BY 1,2;

--Joining COVID Deaths and Vaccinations Tables
SELECT * 
FROM COVIDDeaths dea
JOIN COVIDVaccinations  vac 
	ON dea.location = vac.location 
	and dea.date = vac.date;
	
--Looking at Total Population vs Vaccinations
SELECT dea.continent, 
	dea.location, 
	dea.date, 
	dea.population, 
	vac.new_vaccinations,
	SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS [Rolling Vaccinations (by dose)]-- Getting a rolling count of pvaccinations by country
FROM COVIDDeaths dea
JOIN COVIDVaccinations AS  vac 
	ON dea.location = vac.location 
	and dea.date = vac.date
WHERE dea.continent is NOT NULL
ORDER BY 2 ,3;

-- Use CTE (Common Table Expression)
WITH PopvsVac (continent, location, date, population, new_vaccinations,[Rolling Vaccinations (by dose)])
AS 
(
SELECT dea.continent, 
	dea.location, 
	dea.date, 
	dea.population, 
	vac.new_vaccinations,
	SUM(CAST(vac.new_vaccinations AS FLOAT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS [Rolling Vaccinations (by dose)]-- Getting a rolling count of people vaccinated by country
FROM COVIDDeaths dea
JOIN COVIDVaccinations AS  vac 
	ON dea.location = vac.location 
	and dea.date = vac.date
WHERE dea.continent is NOT NULL
--ORDER BY 2 ,3
)

SELECT *, ([Rolling Vaccinations (by dose)]/population)  * 100 AS [Rolling Percentage Vaccinations (by dose)]
FROM PopvsVac;


-- Creating View to store data for later visualizations
CREATE VIEW PercentPopulationVaccinated AS
SELECT dea.continent, 
	dea.location, 
	dea.date, 
	dea.population, 
	vac.new_vaccinations,
	SUM(CAST(vac.new_vaccinations AS FLOAT)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS [Rolling Vaccinations (by dose)]-- Getting a rolling count of people vaccinated by country
FROM COVIDDeaths dea
JOIN COVIDVaccinations AS  vac 
	ON dea.location = vac.location 
	and dea.date = vac.date
WHERE dea.continent is NOT NULL
--ORDER BY 2 ,3;


</sql><current_tab id="0"/></tab_sql></sqlb_project>
